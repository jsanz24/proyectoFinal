{"version":3,"sources":["Service/authSevice.js","Components/Login.js","Components/Signup.js","Components/Home.js","Components/MiniGames/Feria.js","Components/MiniGames/Basket.js","App.js","serviceWorker.js","index.js"],"names":["authService","_this","this","Object","classCallCheck","logout","service","get","then","data","loggedin","login","username","password","post","signup","axios","create","baseURL","concat","process","API_URL","Login","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","response","setState","error","redirect","catch","console","log","handleChange","_event$target","target","name","value","objectSpread","defineProperty","_this2","react_default","a","createElement","Redirect","to","onSubmit","type","onChange","e","Link","Component","Signup","Home","Feria","socket","io","SOCKET_PORT","Basket","cb","err","timestamp","emit","on","onClick","handleClick","App","className","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3651f55c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class authService {\n\tconstructor() {\n\t\tthis.service = axios.create({baseURL:`${process.env.API_URL}/auth`});\n\t}\n\tlogout = () => {\n\t\treturn this.service.get('/logout').then((data) => data.data);\n\t};\n\n\tloggedin = () => {\n\t\treturn this.service.get('/loggedin').then((data) => data.data);\n\t};\n\n\tlogin = (username,password) => {\n\t\treturn this.service.post(`/login`,{username,password}).then((data) => data.data);\n\t};\n\t\n\tsignup = (username,password) => {\n\t\treturn this.service.post(`/signup`,{username,password}).then((data) => data.data);\n\t};\n\t\n}\n","import React, { Component } from 'react'\nimport {Link, Redirect} from \"react-router-dom\"\nimport authService from \"../Service/authSevice\"\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '', redirect: false };\n        this.service = new authService();\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const username = this.state.username;\n        const password = this.state.password;\n\n        this.service.login(username, password)\n            .then(response => {\n            this.setState({\n                username: username,\n                password: password,\n                error: false,\n                redirect:true\n            });        \n        })\n        .catch( error => console.log(error))\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({...this.state, [name]: value });\n    }\n    render() {\n        return (\n            <div>\n                {this.state.redirect ? <Redirect to=\"/home\" /> : \"\"}\n                <form onSubmit={this.handleFormSubmit}>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)}></input>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)}></input>\n                    <button>Log In</button>\n                </form>\n                <Link to=\"/signup\"><button>Sign Up</button></Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Redirect} from \"react-router-dom\"\nimport authService from \"../Service/authSevice\"\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '', redirect: false };\n        this.service = new authService();\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const username = this.state.username;\n        const password = this.state.password;\n\n        this.service.signup(username, password)\n            .then(response => {\n            this.setState({\n                username: username,\n                password: password,\n                error: false,\n                redirect:true\n            });        \n        })\n        .catch( error => console.log(error))\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({...this.state, [name]: value });\n    }\n    render() {\n        return (\n            <div>\n                {this.state.redirect ? <Redirect to=\"/home\" /> : \"\"}\n                <form onSubmit={this.handleFormSubmit}>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)}></input>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)}></input>\n                    <button>Sign Up</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\n\n\n\nexport default class Home extends Component {\n    \n\n    render() {\n        return (\n            <div>\n                <Link to=\"/feria\"><button>feria</button></Link>\n                <Link to=\"/basket\"><button>basket</button></Link>\n                <Link to=\"/robo\"><button>robo</button></Link>\n                <Link to=\"/pesca\"><button>pesca</button></Link>\n                <Link to=\"/funam\"><button>funam</button></Link>\n\n            </div>\n        )\n           \n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Feria extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport io from 'socket.io-client';\n\nconst socket = io(`${process.env.SOCKET_PORT}5001`);\nfunction subscribeToTimer(cb) {\n    socket.emit('subscribeToTimer', 1000);\n    socket.on('timer', timestamp => cb(null, timestamp));\n  }\nexport default class Basket extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {}\n        subscribeToTimer((err, timestamp) => {\n            console.log(\"puto\")\n            this.setState({ \n                timestamp \n            })\n        });\n            // socket.on('chat message1', function(msg){\n            //     console.log(socket.id)\n            //     io.emit('chat message1', msg);\n            // });\n        \n    }\n    handleClick(){\n        socket.emit('clicked');\n        socket.on('clicked');\n        \n    }\n    render() {\n        console.log(this.state)\n        return (\n            <div>\n                {/* <meta httpEquiv=\"origin-trial\" data-feature=\"Generic Sensors\" data-expires=\"2018-02-27\" content=\"AjL+UlBzLjx+0FPXrML6IMA/Ax9GsO/7rUvV/aaKkh3KknUSwDBgymn0d3NhGeRMNS7FlYD73ernqvZNoqzNMw4AAABWeyJvcmlnaW4iOiJodHRwczovL2ludGVsLmdpdGh1Yi5pbzo0NDMiLCJmZWF0dXJlIjoiR2VuZXJpY1NlbnNvciIsImV4cGlyeSI6MTUxOTczOTAwNX0=\"></meta>\n                <script src=\"./main.js\"></script>\n                <script src=\"./gauge.js\"></script>\n                <link href=\"./styles.css\"></link>\n                <div id=\"game_text\" className=\"shakeToStart\" style={{display:\"none\"}}>\n                    Shake device and find out!\n                </div>\n                <canvas id=\"gauge\"></canvas>\n                <div id=\"measurement\" className=\"shakeToStart\">\n                    <div id=\"preview\">0</div>\n                    <div>km/h</div>\n                </div> */}\n                <button onClick={this.handleClick}>click me</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Switch,Route} from \"react-router-dom\"\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport Home from './Components/Home';\nimport Feria from './Components/MiniGames/Feria';\nimport Basket from './Components/MiniGames/Basket';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\"  component={Login}></Route>\n          <Route exact path=\"/signup\"  component={Signup}></Route>\n          <Route exact path=\"/home\"  component={Home}></Route>\n          <Route exact path=\"/feria\"  component={Feria}></Route>\n          <Route exact path=\"/basket\"  component={Basket}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}